

# Objectif

monitorer sans interrompre un trafic avec des vlans taggés
ajouter une interface a son PC dans le vlan de son choix




# conf du vieux swtich 3com 

vlan 1 :
- 192.168.100.77
- ne fonctionne que quand kali_tower a l'interface usb-ethernet de branchée

vlan 2 :
- untag sur les ports 2 et 11
- tag sur le port 12
- pas d'interface dans le vlan 2

vlan 3 :
- untag sur les ports 3
- tag sur le port 12
- pas d'interface dans le vlan 2

vlan 4 :
- untag sur les ports 4
- untag sur le port 12 !!!
- pas d'interface dans le vlan 2


# Conf du swtich4200


# perte de conf a chaque demarrage se brancher dessus en serie avec
minicom conf3com

system-view

interface Ethernet 1/0/12
port link-type trunk
port trunk permit vlan 2
port trunk permit vlan 3
quit

vlan 2
port Ethernet 1/0/2
port Ethernet 1/0/11
quit

vlan 3
port Ethernet 1/0/3
quit



# conf du raspberry PI blanc 	
- 192.168.253.10 sur le port 11 du switch 4200

# conf du Kali_tower 
- 192.168.253.11 sur le port 11 du vieux 3com (vlan 2)
- 192.168.100.33 sur le vieux 3com (vlan 1) quand 'linterface usb-ethernet est branchée

# conf du pc en position de MITM
- 192.168.253.12 sur le bridge0 (permet de pinguer)
- [pas d'ip] sur eth0
- [pas d'ip] sur eth1


# Mettre sarasvati en man ip the middle et monitorer le trafic sans l'interompre

- monter un bridge avec network manager et nmcli

nmcli con show | grep  bridge0
nmcli con up 37dd44bf-794a-42fe-83c1-44a5352f9e41
nmcli con up 66607e25-59ce-4a4a-8841-2ad1e78db98e
nmcli con up 7a399367-3fc6-46da-bc9b-a3ac634f9115


- passer les interfaces en mode promiscus ? (a priori pas utile, mais ne mange pas de pain)

- desactiver le filtrage iptables pour le bridge : 
https://superuser.com/questions/1211852/why-linux-bridge-doesnt-work
echo 0 > /proc/sys/net/bridge/bridge-nf-call-iptables

Fonctione !

# Le trafic passe, y compris avec des vlans. Les tags des vlans sont visibles dans wireshark.

# Les machines dont le traffic est visible sans vlan sont pingables depuis la machine MITM

#TODO 
# Donner a sarasvati une @ip dans le vlan 2 et pinguer aussi !

https://medium.com/@kbidarkar/configuring-bridges-and-vlans-using-nmcli-8cb79f45d3a6

Ajouter une interface avec un vlan (marche pas pour le moment)
nmcli con add type vlan con-name bridge0.vlan2 dev eth0 id 2 master bridge0 connection.autoconnect yes
-> permet de pinguer vers 192.168.253.10 mais pas .11 et tue le forward de paquets via le bridge !
nmcli con add type vlan con-name bridge0.vlan2 dev eth1 id 2 master bridge0 connection.autoconnect yes
-> marche pas

Supprimer une internface
nmcli con delete d28b9f93-7cbb-48a3-9829-2c3603a1c9a5





# Autre commande (deprecated) : vconfig
sudo vconfig add eth0 2
sudo vconfig rem eth0.2




# Autre commande : ip


sudo ip link add link bridge0 name br0.2 type vlan id 2

ip link set dev br0.2
sudo ip link delete br0.2

sudo ip link set dev bridge0 type bridge vlan_filtering 1
sudo bridge vlan del dev eth1 vid 1
sudo bridge vlan del dev eth0 vid 1

sudo bridge vlan add dev eth1 vid 2 pvid trunk
sudo bridge vlan add dev eth0 vid 2 pvid trunk

sudo ip link set bridge0 up
(!) ne bridge plus ne permet pas de pinger

sudo ip link set dev bridge0 type bridge vlan_filtering 0




# Autre commande : bridge (fonctionne)
######################################

https://developpaper.com/linux-bridge-vlan-filtering/

# On commence par peter d'eventeulles anciennes conf nmcli
nmcli conn show
-> identifier les interface correspondant a des bridge crees avec network manager
nmcli con delete 7a399367-3fc6-46da-bc9b-a3ac634f9115
nmcli con del 37dd44bf-794a-42fe-83c1-44a5352f9e41
nmcli con del 66607e25-59ce-4a4a-8841-2ad1e78db98e

# si besoin on re-ecarte iptables
sudo su
echo 0 > /proc/sys/net/bridge/bridge-nf-call-iptables
exit

# On cree un bridge "vlan-aware"
#sudo ip link add Bridge up type bridge vlan_filtering 1
#sudo ip link set eth0 master Bridge
#sudo ip link set eth1 master Bridge

# Pour info comment on supprime un bridge
sudo ip link del link Bridge

# On en re-cree un avec les vlans
sudo ip link add Bridge up type bridge vlan_filtering 0
sudo ip link set eth0 master Bridge
sudo ip link set eth1 master Bridge
-> faire un dump du trafic et noter les vlans

sudo bridge vlan add vid 2 dev Bridge self
sudo bridge vlan add vid 2 dev eth1 master
sudo bridge vlan add vid 2 dev eth0 master
sudo ip link add link Bridge name Vlan2  up type vlan id 2
sudo ip addr add 192.168.253.16/24 dev Vlan2
sudo bridge vlan show
└─$ sudo bridge vlan show
port              vlan-id  
eth0              1 PVID Egress Untagged
                  2
docker0           1 PVID Egress Untagged
eth1              1 PVID Egress Untagged
                  2
Bridge            1 PVID Egress Untagged
                  2

ping 192.168.253.10
ping 192.168.253.11

-> Le ping passe a travers le bridge
-> On peut sniffer avec wireshark (testé avec du trafic tagué et non tagué)
-> On peut pinger les machines presentes dans un vlan
-> quand on s'installe dans le vlan2 et qu'on ping des communications sur le vlan 3 non-identifié continue a passer
Tout fonctionne !


# DUMPER le trafic
##################

sudo timeout -s 9 5 tcpdump -i Bridge -w test.pcapng







